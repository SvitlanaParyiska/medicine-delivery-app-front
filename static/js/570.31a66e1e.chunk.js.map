{"version":3,"file":"static/js/570.31a66e1e.chunk.js","mappings":"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","sources":["components/CartItem/CartItem.styled.js","components/CartItem/index.jsx","components/CartList/CartList.styled.js","components/CartList/index.jsx","components/CartForm/CartForm.styled.js","components/CartForm/index.jsx","helpers/cartHelper.js","pages/ShoppingCartPage/index.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CartLi = styled.li`\n  width: 70%;\n  overflow: hidden;\n  margin-left: auto;\n  margin-right: auto;\n\n  > div {\n    transition: var(--transition);\n\n    &:hover,\n    &:focus {\n      box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.1),\n        0px 2px 1px rgba(0, 0, 0, 0.08), 0px 2px 2px rgba(0, 0, 0, 0.12);\n    }\n  }\n\n  img {\n    height: 100%;\n    object-fit: cover;\n  }\n`;\n\nexport const ButtonStyled = styled.button`\n  background-color: transparent;\n  border: none;\n  margin-bottom: 0;\n`;\n\nexport const SvgFavAdd = styled.svg`\n  width: 18px;\n  height: 18px;\n  fill: var(--color-secondary);\n  stroke: var(--color-secondary);\n  transition: var(--transition);\n\n  &:hover,\n  &:focus {\n    fill: var(--color-accent);\n    stroke: var(--color-accent);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteDrug, downTotal, upTotal } from '../../redux/shopsSlice';\nimport defaultPicture from '../../images/placeholder2.jpg';\nimport { CartLi, ButtonStyled, SvgFavAdd } from './CartItem.styled';\nimport sprite from '../../images/sprite.svg';\n\nfunction CartItem({ drug }) {\n  const dispatch = useDispatch();\n\n  function totalChangeUp() {\n    dispatch(upTotal(drug));\n  }\n  function totalChangeDown() {\n    dispatch(downTotal(drug));\n  }\n\n  function deleteFromCart() {\n    dispatch(deleteDrug(drug));\n  }\n\n  return (\n    <CartLi>\n      <div className=\"card mb-3\">\n        <div className=\"row no-gutters\">\n          <div className=\"col-md-4\">\n            <img\n              src={drug.imgURL ? drug.imgURL : defaultPicture}\n              className=\"card-img\"\n              alt=\"...\"\n              style={{ width: '250px' }}\n            />\n          </div>\n          <div className=\"col-md-8\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{drug.drugName}</h5>\n              <p className=\"card-text\">amount: {drug.price * drug.total} UAH</p>\n              <div\n                className=\"mb-3\"\n                style={{ display: 'flex', alignItems: 'center' }}\n              >\n                <p\n                  style={{\n                    border: '2px solid #262f34',\n                    borderRadius: '4px',\n                    padding: '5px 10px',\n                  }}\n                >\n                  {drug.total}\n                </p>\n                <div>\n                  <ButtonStyled type=\"button\" onClick={totalChangeUp}>\n                    <SvgFavAdd>\n                      <use href={`${sprite}#icon-arrow-up-square`}></use>\n                    </SvgFavAdd>\n                  </ButtonStyled>\n                  <ButtonStyled type=\"button\" onClick={totalChangeDown}>\n                    <SvgFavAdd>\n                      <use href={`${sprite}#icon-arrow-down-square`}></use>\n                    </SvgFavAdd>\n                  </ButtonStyled>\n                </div>\n                <button\n                  type=\"button\"\n                  onClick={deleteFromCart}\n                  style={{\n                    border: 'none',\n                    backgroundColor: 'transparent',\n                    marginLeft: 'auto',\n                  }}\n                >\n                  <SvgFavAdd>\n                    <use href={`${sprite}#icon-cart-x`}></use>\n                  </SvgFavAdd>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </CartLi>\n  );\n}\n\nexport default CartItem;\n","import styled from 'styled-components';\n\nexport const CartListBox = styled.div`\n  height: 500px;\n  overflow: auto;\n  padding: 15px;\n  border-radius: 8px;\n  border: 1px solid #262f34;\n\n  &::-webkit-scrollbar {\n    width: 10px;\n  }\n  &::-webkit-scrollbar-thumb {\n    background: var(--color-accent);\n    border-radius: 14px;\n  }\n\n  @media screen and (max-width: 767px) {\n    margin-top: 20px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 70%;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { selectCartList } from '../../redux/shopsSelectors';\nimport CartItem from 'components/CartItem';\nimport { nanoid } from 'nanoid';\nimport { Link } from 'react-router-dom';\nimport { CartListBox } from './CartList.styled';\n\nfunction CartList() {\n  const listOfCart = useSelector(selectCartList);\n\n  return (\n    <CartListBox>\n      <ul>\n        {listOfCart.length > 0 ? (\n          listOfCart.map(item => <CartItem key={nanoid()} drug={item} />)\n        ) : (\n          <>\n            <p>Your shopping cart is still empty...</p>\n            <Link to=\"/\">Back to shopping</Link>\n          </>\n        )}\n      </ul>\n    </CartListBox>\n  );\n}\n\nexport default CartList;\n","import styled from 'styled-components';\n\nexport const FormBoxStyled = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n    gap: 20px;\n  }\n`;\n\nexport const InputsBoxStyled = styled.div`\n  padding: 15px;\n  border-radius: 8px;\n  border: 1px solid #262f34;\n`;\n\nexport const ButtonBox = styled.div`\n  margin-top: 20px;\n  display: flex;\n  gap: 30px;\n  align-items: center;\n  justify-content: flex-end;\n`;\n\nexport const ClearButton = styled.button`\n  display: block;\n  margin-left: auto;\n  margin-right: 0;\n  margin-top: 20px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addCart } from '../../redux/shopsOperations';\nimport CartList from 'components/CartList';\nimport {\n  FormBoxStyled,\n  InputsBoxStyled,\n  ButtonBox,\n  ClearButton,\n} from './CartForm.styled';\nimport { selectCartList } from '../../redux/shopsSelectors';\nimport { useEffect, useState } from 'react';\nimport { totalAmount } from 'helpers/cartHelper';\nimport Notiflix from 'notiflix';\nimport { clearCart } from '../../redux/shopsSlice';\n\nfunction CartForm() {\n  const dispatch = useDispatch();\n  const [total, setTotal] = useState(0);\n  const listOfCart = useSelector(selectCartList);\n\n  useEffect(() => {\n    if (listOfCart.length > 0) {\n      const totalCulc = totalAmount(listOfCart);\n      setTotal(totalCulc);\n    } else {\n      setTotal(0);\n    }\n  }, [listOfCart]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const { name, email, phone, address } = e.target.elements;\n\n    try {\n      await dispatch(\n        addCart({\n          drugsList: listOfCart,\n          totalPrice: total,\n          name: name.value,\n          email: email.value,\n          phone: Number(phone.value),\n          address: address.value,\n        })\n      ).unwrap();\n      Notiflix.Notify.success('Done!', {\n        timeout: 2000,\n      });\n      e.target.reset();\n    } catch (e) {\n      Notiflix.Notify.failure('Fill in correct data!', {\n        timeout: 2000,\n      });\n    }\n  };\n\n  function clearTotalCart() {\n    dispatch(clearCart());\n  }\n  return (\n    <div>\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\n        <FormBoxStyled>\n          <InputsBoxStyled>\n            <div className=\"mb-3\">\n              <label htmlFor=\"inputName\" className=\"form-label\">\n                Username:\n              </label>\n              <input\n                type=\"text\"\n                name=\"name\"\n                className=\"form-control\"\n                id=\"inputName\"\n                required\n              />\n            </div>\n            <div className=\"mb-3\">\n              <label htmlFor=\"inputEmail\" className=\"form-label\">\n                Email:\n              </label>\n              <input\n                type=\"email\"\n                name=\"email\"\n                className=\"form-control\"\n                id=\"inputEmail\"\n                aria-describedby=\"emailHelp\"\n                pattern=\"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$\"\n                required\n              />\n              <div id=\"emailHelp\" className=\"form-text\">\n                We'll never share your email with anyone else.\n              </div>\n            </div>\n            <div className=\"mb-3\">\n              <label htmlFor=\"inputPhone\" className=\"form-label\">\n                Phone:\n              </label>\n              <input\n                type=\"number\"\n                name=\"phone\"\n                className=\"form-control\"\n                id=\"inputPhone\"\n                required\n              />\n            </div>\n\n            <div className=\"mb-3\">\n              <label htmlFor=\"inputAddress\" className=\"form-label\">\n                Address:\n              </label>\n              <input\n                type=\"text\"\n                name=\"address\"\n                className=\"form-control\"\n                id=\"inputAddress\"\n                required\n              ></input>\n            </div>\n          </InputsBoxStyled>\n          <CartList />\n        </FormBoxStyled>\n        <ButtonBox>\n          <p>Total price: {total} UAH</p>\n          <button type=\"submit\" className=\"btn btn-info\">\n            Submit\n          </button>\n        </ButtonBox>\n      </form>\n      <ClearButton\n        type=\"button\"\n        className=\"btn btn-danger\"\n        onClick={clearTotalCart}\n      >\n        Clear cart\n      </ClearButton>\n    </div>\n  );\n}\n\nexport default CartForm;\n","export function totalAmount(arrayList) {\n  let total = 0;\n  arrayList.forEach(element => {\n    total += element.total * element.price;\n  });\n  return total;\n}\n\nexport function totalToDown() {}\n","import CartForm from 'components/CartForm';\n\nfunction ShoppingCartPage() {\n  return (\n    <main>\n      <div className=\"container\">\n        <CartForm />\n      </div>\n    </main>\n  );\n}\n\nexport default ShoppingCartPage;\n"],"names":["CartLi","styled","li","_templateObject","_taggedTemplateLiteral","ButtonStyled","button","_templateObject2","SvgFavAdd","svg","_templateObject3","_ref","drug","dispatch","useDispatch","_jsx","children","className","_jsxs","src","imgURL","defaultPicture","alt","style","width","drugName","price","total","display","alignItems","border","borderRadius","padding","type","onClick","upTotal","href","concat","sprite","downTotal","deleteDrug","backgroundColor","marginLeft","CartListBox","div","listOfCart","useSelector","selectCartList","length","map","item","CartItem","nanoid","_Fragment","Link","to","FormBoxStyled","InputsBoxStyled","ButtonBox","ClearButton","_templateObject4","setTotal","useState","useEffect","totalCulc","arrayList","forEach","element","totalAmount","onSubmit","async","e","preventDefault","name","email","phone","address","target","elements","addCart","drugsList","totalPrice","value","Number","unwrap","Notiflix","success","timeout","reset","failure","autoComplete","htmlFor","id","required","pattern","CartList","clearCart","CartForm"],"sourceRoot":""}