{"version":3,"file":"static/js/393.f5044add.chunk.js","mappings":"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","sources":["components/DrugsItem/DrugsItem.styled.js","components/DrugsItem/index.jsx","pages/FavoritesPage/index.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const DrugItem = styled.li`\n  cursor: pointer;\n  transition: var(--transition);\n\n  &:hover,\n  &:focus {\n    box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.1), 0px 2px 1px rgba(0, 0, 0, 0.08),\n      0px 2px 2px rgba(0, 0, 0, 0.12);\n  }\n`;\n\nexport const BtnFav = styled.button`\n  width: 24px;\n  height: 24px;\n  border: none;\n  background: transparent;\n  position: absolute;\n  top: 10px;\n  right: 14px;\n`;\n\nexport const SvgFav = styled.svg`\n  width: 18px;\n  height: 18px;\n  stroke: var(--color-accent);\n  fill: none;\n  transition: var(--transition);\n\n  &:hover,\n  &:focus {\n    fill: var(--color-accent);\n  }\n`;\n\nexport const SvgFavAdd = styled.svg`\n  width: 18px;\n  height: 18px;\n  fill: var(--color-accent);\n  stroke: var(--color-accent);\n  transition: var(--transition);\n\n  &:hover,\n  &:focus {\n    fill: var(--color-accent);\n    stroke: var(--color-accent);\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addFavorite, deleteFavorite, upTotal } from '../../redux/shopsSlice';\nimport defaultPicture from '../../images/placeholder.jpg';\nimport Notiflix from 'notiflix';\nimport { BtnFav, DrugItem, SvgFav, SvgFavAdd } from './DrugsItem.styled';\nimport { selectFavoritesDrugs } from '../../redux/shopsSelectors';\nimport { useEffect, useState } from 'react';\nimport sprite from '../../images/sprite.svg';\n\nfunction DrugsItem({ drug }) {\n  const dispatch = useDispatch();\n  const favoritesArray = useSelector(selectFavoritesDrugs);\n  const [isFavorite, setIsFavorite] = useState(false);\n\n  const addToCart = () => {\n    dispatch(upTotal(drug));\n    Notiflix.Notify.success('Added to cart successful!', {\n      timeout: 2000,\n    });\n  };\n\n  useEffect(() => {\n    if (favoritesArray.some(item => item.drugName === drug.drugName)) {\n      setIsFavorite(true);\n    } else {\n      setIsFavorite(false);\n    }\n  }, [drug.drugName, favoritesArray]);\n\n  const handleFav = () => {\n    if (isFavorite) {\n      console.log(drug._id);\n      dispatch(deleteFavorite(drug._id));\n      Notiflix.Notify.success('Drug was successful deleted!', {\n        timeout: 2000,\n      });\n    } else {\n      dispatch(addFavorite(drug));\n      Notiflix.Notify.success('Drug was successful added!', {\n        timeout: 2000,\n      });\n    }\n  };\n\n  return (\n    <DrugItem>\n      <div className=\"card\" style={{ width: '18rem', position: 'relative' }}>\n        <img\n          src={drug.imgURL ? drug.imgURL : defaultPicture}\n          className=\"card-img-top\"\n          alt=\"drug\"\n          style={{ height: '180px' }}\n        />\n        <BtnFav\n          type=\"button\"\n          aria-label=\"add or delete car from favorites\"\n          onClick={handleFav}\n        >\n          {isFavorite ? (\n            <SvgFavAdd>\n              <use href={`${sprite}#icon-normal`}></use>\n            </SvgFavAdd>\n          ) : (\n            <SvgFav>\n              <use href={`${sprite}#icon-normal`}></use>\n            </SvgFav>\n          )}\n        </BtnFav>\n        <div\n          className=\"card-body\"\n          style={{\n            display: 'flex',\n            flexWrap: 'wrap',\n            gap: '10px',\n            justifyContent: 'space-between',\n          }}\n        >\n          <h5 className=\"card-title\">{drug.drugName}</h5>\n          <p className=\"card-text\">Price: {drug.price} UAH</p>\n          <button type=\"button\" className=\"btn btn-primary\" onClick={addToCart}>\n            add to Cart\n          </button>\n        </div>\n      </div>\n    </DrugItem>\n  );\n}\n\nexport default DrugsItem;\n","import DrugsItem from 'components/DrugsItem';\nimport { nanoid } from 'nanoid';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { selectFavoritesDrugs } from '../../redux/shopsSelectors';\n\nfunction FavoritesPage() {\n  const favoritesArray = useSelector(selectFavoritesDrugs);\n\n  return (\n    <main>\n      <div className=\"container\">\n        <h1 style={{ fontSize: '26px', marginBottom: '20px' }}>\n          Your list of favorites:\n        </h1>\n        <ul style={{ display: 'flex', flexWrap: 'wrap', gap: '10px' }}>\n          {favoritesArray.length > 0 ? (\n            favoritesArray.map(item => <DrugsItem drug={item} key={nanoid()} />)\n          ) : (\n            <>\n              <p>Your favorites list is still empty...</p>\n              <Link to=\"/\">Back to shopping</Link>\n            </>\n          )}\n        </ul>\n      </div>\n    </main>\n  );\n}\n\nexport default FavoritesPage;\n"],"names":["DrugItem","styled","li","_templateObject","_taggedTemplateLiteral","BtnFav","button","_templateObject2","SvgFav","svg","_templateObject3","SvgFavAdd","_templateObject4","_ref","drug","dispatch","useDispatch","favoritesArray","useSelector","selectFavoritesDrugs","isFavorite","setIsFavorite","useState","useEffect","some","item","drugName","_jsx","children","_jsxs","className","style","width","position","src","imgURL","defaultPicture","alt","height","type","onClick","handleFav","console","log","_id","deleteFavorite","Notiflix","success","timeout","addFavorite","href","concat","sprite","display","flexWrap","gap","justifyContent","price","addToCart","upTotal","fontSize","marginBottom","length","map","DrugsItem","nanoid","_Fragment","Link","to"],"sourceRoot":""}